/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LMRevertReasons,
  LMRevertReasonsInterface,
} from "../../contracts/LMRevertReasons";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getReason",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reasons",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051806102e001604052806040518060600160405280602d8152602001610b0e602d913981526020016040518060400160405280601381526020017f6c656167756520646f65732774206578697374000000000000000000000000008152508152602001604051806060016040528060368152602001610ad86036913981526020016040518060400160405280601481526020017f706c6179657220646f65736e277420657869737400000000000000000000000081525081526020016040518060400160405280601c81526020017f43616e206f6e6c7920656469742077616974696e67206c6561677565000000008152508152602001604051806060016040528060228152602001610b976022913981526020016040518060400160405280601281526020017f6c69766554696d65206d757374203e3d2030000000000000000000000000000081525081526020016040518060400160405280601a81526020017f636c6f736554696d65206d757374203e3d206c69766554696d6500000000000081525081526020016040518060400160405280601381526020017f6d6178506c61796572206d757374203e3d20300000000000000000000000000081525081526020016040518060600160405280602a8152602001610aae602a913981526020016040518060400160405280601781526020017f696e697452657761726420213d206d73672e76616c756500000000000000000081525081526020016040518060400160405280601281526020017f6d696e456e747279206d757374203e3d2030000000000000000000000000000081525081526020016040518060400160405280601781526020017f54686973206c6561677565206973206e6f74206f70656e0000000000000000008152508152602001604051806060016040528060228152602001610b756022913981526020016040518060400160405280600b81526020017f6c65616775652046756c6c00000000000000000000000000000000000000000081525081526020016040518060400160405280600e81526020017f4e69636b6e616d652074616b656e00000000000000000000000000000000000081525081526020016040518060400160405280601581526020017f416464726573732776652072656769737465726564000000000000000000000081525081526020016040518060400160405280601f81526020017f41636320626c6f636b65642066726f6d206a6f696e696e67207468696e67730081525081526020016040518060600160405280603a8152602001610b3b603a913981526020016040518060400160405280601181526020017f696e73756666696369656e742066756e6400000000000000000000000000000081525081526020016040518060400160405280601781526020017f4d757374206265205b4c6976655d20746f20636c6f736500000000000000000081525081526020016040518060400160405280601481526020017f706c61796572206e6f7420696e206c656167756500000000000000000000000081525081526020016040518060400160405280601f81526020017f626c6f636b656420706c617965722c2063616e27742062652077696e6e65720081525081525060009060176104bd9291906104d0565b503480156104ca57600080fd5b5061068b565b8260178101928215610512579160200282015b82811115610511578251829080519060200190610501929190610523565b50916020019190600101906104e3565b5b50905061051f91906105a9565b5090565b82805461052f9061062a565b90600052602060002090601f0160209004810192826105515760008555610598565b82601f1061056a57805160ff1916838001178555610598565b82800160010185558215610598579182015b8281111561059757825182559160200191906001019061057c565b5b5090506105a591906105cd565b5090565b5b808211156105c957600081816105c091906105ea565b506001016105aa565b5090565b5b808211156105e65760008160009055506001016105ce565b5090565b5080546105f69061062a565b6000825580601f106106085750610627565b601f01602090049060005260206000209081019061062691906105cd565b5b50565b6000600282049050600182168061064257607f821691505b602082108114156106565761065561065c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6104148061069a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633bf8af6514610046578063b41ace1714610064578063b7928b4f14610094575b600080fd5b61004e6100c4565b60405161005b91906102e1565b60405180910390f35b61007e6004803603810190610079919061024e565b6100c9565b60405161008b91906102bf565b60405180910390f35b6100ae60048036038101906100a9919061024e565b61016c565b6040516100bb91906102bf565b60405180910390f35b601681565b600081601781106100d957600080fd5b0160009150905080546100eb90610355565b80601f016020809104026020016040519081016040528092919081815260200182805461011790610355565b80156101645780601f1061013957610100808354040283529160200191610164565b820191906000526020600020905b81548152906001019060200180831161014757829003601f168201915b505050505081565b6060600082601781106101a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0180546101b490610355565b80601f01602080910402602001604051908101604052809291908181526020018280546101e090610355565b801561022d5780601f106102025761010080835404028352916020019161022d565b820191906000526020600020905b81548152906001019060200180831161021057829003601f168201915b50505050509050919050565b600081359050610248816103c7565b92915050565b60006020828403121561026057600080fd5b600061026e84828501610239565b91505092915050565b6000610282826102fc565b61028c8185610307565b935061029c818560208601610322565b6102a5816103b6565b840191505092915050565b6102b981610318565b82525050565b600060208201905081810360008301526102d98184610277565b905092915050565b60006020820190506102f660008301846102b0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b83811015610340578082015181840152602081019050610325565b8381111561034f576000848401525b50505050565b6000600282049050600182168061036d57607f821691505b6020821081141561038157610380610387565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6103d081610318565b81146103db57600080fd5b5056fea2646970667358221220988e3f1881753b242081215c383e0db3aaecaf9f09d3f45dfdb557d28f9d991a64736f6c634300080400336d6178506c61796572206d757374203e3d206e756d626572206f66206a6f696e656420706c6179657273596f752063616e277420706572666f726d207468697320616374696f6e2028696e206c6561677565416374696f6e436f6e74726f6c29596f752061726520747279696e6720746f206368616e676520796f7572206f776e2061646d696e20737461746550726f76696465207468652065786163742076616c7565206f66206d696e696d756d20656e74727920726571756972656d656e742028776569296d616e616765722077686f206d616465206c65616775652063616e2774206a6f696e6c656e2877696e436f6e64732920213d206c656e2877696e436f6e644f7073292b31";

type LMRevertReasonsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LMRevertReasonsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LMRevertReasons__factory extends ContractFactory {
  constructor(...args: LMRevertReasonsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LMRevertReasons> {
    return super.deploy(overrides || {}) as Promise<LMRevertReasons>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LMRevertReasons {
    return super.attach(address) as LMRevertReasons;
  }
  override connect(signer: Signer): LMRevertReasons__factory {
    return super.connect(signer) as LMRevertReasons__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LMRevertReasonsInterface {
    return new utils.Interface(_abi) as LMRevertReasonsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LMRevertReasons {
    return new Contract(address, _abi, signerOrProvider) as LMRevertReasons;
  }
}
