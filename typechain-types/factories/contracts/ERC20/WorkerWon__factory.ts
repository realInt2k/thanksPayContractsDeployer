/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WorkerWon,
  WorkerWonInterface,
} from "../../../contracts/ERC20/WorkerWon";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dataAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "securityAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPartnerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getWorkerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "for_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
    ],
    name: "readPartner",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
    ],
    name: "readWorker",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280601481526020017f5468616e6b7350617920576f726b657220576f6e00000000000000000000000081525060039080519060200190620000519291906200017a565b506040518060400160405280600381526020017f5457570000000000000000000000000000000000000000000000000000000000815250600490805190602001906200009f9291906200017a565b506000600560006101000a81548160ff021916908360ff160217905550348015620000c957600080fd5b5060405162001a5538038062001a558339818101604052810190620000ef919062000294565b81806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000340565b82805462000188906200030a565b90600052602060002090601f016020900481019282620001ac5760008555620001f8565b82601f10620001c757805160ff1916838001178555620001f8565b82800160010185558215620001f8579182015b82811115620001f7578251825591602001919060010190620001da565b5b5090506200020791906200020b565b5090565b5b80821115620002265760008160009055506001016200020c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200025c826200022f565b9050919050565b6200026e816200024f565b81146200027a57600080fd5b50565b6000815190506200028e8162000263565b92915050565b60008060408385031215620002ae57620002ad6200022a565b5b6000620002be858286016200027d565b9250506020620002d1858286016200027d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200032357607f821691505b602082108114156200033a5762000339620002db565b5b50919050565b61170580620003506000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063313ce56711610097578063a9059cbb11610066578063a9059cbb146102b1578063ba49cdb5146102e1578063da1919b314610312578063dd62ed3e1461032e576100f5565b8063313ce567146102155780634d0de2251461023357806370a082311461026357806395d89b4114610293576100f5565b8063095ea7b3116100d3578063095ea7b31461017b578063124d91e5146101ab57806318160ddd146101c757806323b872dd146101e5576100f5565b8063016fa018146100fa578063065611551461012a57806306fdde031461015d575b600080fd5b610114600480360381019061010f9190611001565b61035e565b6040516101219190611047565b60405180910390f35b610144600480360381019061013f9190611001565b610376565b6040516101549493929190611071565b60405180910390f35b610165610434565b604051610172919061114f565b60405180910390f35b6101956004803603810190610190919061119d565b6104c2565b6040516101a291906111f8565b60405180910390f35b6101c560048036038101906101c09190611213565b610668565b005b6101cf610adb565b6040516101dc9190611047565b60405180910390f35b6101ff60048036038101906101fa9190611266565b610ae1565b60405161020c91906111f8565b60405180910390f35b61021d610bd2565b60405161022a91906112d5565b60405180910390f35b61024d60048036038101906102489190611001565b610be5565b60405161025a9190611047565b60405180910390f35b61027d60048036038101906102789190611001565b610c2f565b60405161028a9190611047565b60405180910390f35b61029b610c41565b6040516102a8919061114f565b60405180910390f35b6102cb60048036038101906102c6919061119d565b610ccf565b6040516102d891906111f8565b60405180910390f35b6102fb60048036038101906102f69190611001565b610dc0565b6040516103099291906112f0565b60405180910390f35b61032c6004803603810190610327919061119d565b610e74565b005b61034860048036038101906103439190611319565b610f63565b6040516103559190611047565b60405180910390f35b60008061036a83610dc0565b50905080915050919050565b60008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634048a257866040518263ffffffff1660e01b81526004016103d59190611359565b60806040518083038186803b1580156103ed57600080fd5b505afa158015610401573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610425919061139e565b93509350935093509193509193565b6003805461044190611434565b80601f016020809104026020016040519081016040528092919081815260200182805461046d90611434565b80156104ba5780601f1061048f576101008083540402835291602001916104ba565b820191906000526020600020905b81548152906001019060200180831161049d57829003601f168201915b505050505081565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b815260040161051f9190611359565b60206040518083038186803b15801561053757600080fd5b505afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190611492565b61057857600080fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106569190611047565b60405180910390a36001905092915050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016106c39190611359565b60206040518083038186803b1580156106db57600080fd5b505afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190611492565b61071c57600080fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116107da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d19061150b565b60405180910390fd5b816107e484610c2f565b11610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081b90611577565b60405180910390fd5b6108b382600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f8890919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600061093e84610c2f565b90506109538382610f8890919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663beee8cf985836040518363ffffffff1660e01b81526004016109b0929190611597565b600060405180830381600087803b1580156109ca57600080fd5b505af11580156109de573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635b69860b85846040518363ffffffff1660e01b8152600401610a3d929190611597565b600060405180830381600087803b158015610a5757600080fd5b505af1158015610a6b573d6000803e3d6000fd5b50505050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610acd9190611047565b60405180910390a350505050565b60015481565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b8152600401610b3e9190611359565b60206040518083038186803b158015610b5657600080fd5b505afa158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190611492565b610b9757600080fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc99061160c565b60405180910390fd5b600560009054906101000a900460ff1681565b6000806000806000610bf686610376565b93509350935093506000610c0983610dc0565b91505080821015610c21578395505050505050610c2a565b84955050505050505b919050565b6000610c3a82610be5565b9050919050565b60048054610c4e90611434565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7a90611434565b8015610cc75780601f10610c9c57610100808354040283529160200191610cc7565b820191906000526020600020905b815481529060010190602001808311610caa57829003601f168201915b505050505081565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b8152600401610d2c9190611359565b60206040518083038186803b158015610d4457600080fd5b505afa158015610d58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7c9190611492565b610d8557600080fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db79061160c565b60405180910390fd5b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395c33652846040518263ffffffff1660e01b8152600401610e1c9190611359565b604080518083038186803b158015610e3357600080fd5b505afa158015610e47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6b919061162c565b91509150915091565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b8152600401610ecf9190611359565b60206040518083038186803b158015610ee757600080fd5b505afa158015610efb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1f9190611492565b610f2857600080fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5a9061160c565b60405180910390fd5b6002602052816000526040600020602052806000526040600020600091509150505481565b60008183610f96919061169b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fce82610fa3565b9050919050565b610fde81610fc3565b8114610fe957600080fd5b50565b600081359050610ffb81610fd5565b92915050565b60006020828403121561101757611016610f9e565b5b600061102584828501610fec565b91505092915050565b6000819050919050565b6110418161102e565b82525050565b600060208201905061105c6000830184611038565b92915050565b61106b81610fc3565b82525050565b60006080820190506110866000830187611038565b6110936020830186611038565b6110a06040830185611062565b6110ad6060830184611038565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110f05780820151818401526020810190506110d5565b838111156110ff576000848401525b50505050565b6000601f19601f8301169050919050565b6000611121826110b6565b61112b81856110c1565b935061113b8185602086016110d2565b61114481611105565b840191505092915050565b600060208201905081810360008301526111698184611116565b905092915050565b61117a8161102e565b811461118557600080fd5b50565b60008135905061119781611171565b92915050565b600080604083850312156111b4576111b3610f9e565b5b60006111c285828601610fec565b92505060206111d385828601611188565b9150509250929050565b60008115159050919050565b6111f2816111dd565b82525050565b600060208201905061120d60008301846111e9565b92915050565b60008060006060848603121561122c5761122b610f9e565b5b600061123a86828701610fec565b935050602061124b86828701611188565b925050604061125c86828701611188565b9150509250925092565b60008060006060848603121561127f5761127e610f9e565b5b600061128d86828701610fec565b935050602061129e86828701610fec565b92505060406112af86828701611188565b9150509250925092565b600060ff82169050919050565b6112cf816112b9565b82525050565b60006020820190506112ea60008301846112c6565b92915050565b60006040820190506113056000830185611038565b6113126020830184611038565b9392505050565b600080604083850312156113305761132f610f9e565b5b600061133e85828601610fec565b925050602061134f85828601610fec565b9150509250929050565b600060208201905061136e6000830184611062565b92915050565b60008151905061138381611171565b92915050565b60008151905061139881610fd5565b92915050565b600080600080608085870312156113b8576113b7610f9e565b5b60006113c687828801611374565b94505060206113d787828801611374565b93505060406113e887828801611389565b92505060606113f987828801611374565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061144c57607f821691505b602082108114156114605761145f611405565b5b50919050565b61146f816111dd565b811461147a57600080fd5b50565b60008151905061148c81611466565b92915050565b6000602082840312156114a8576114a7610f9e565b5b60006114b68482850161147d565b91505092915050565b7f4e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000600082015250565b60006114f56014836110c1565b9150611500826114bf565b602082019050919050565b60006020820190508181036000830152611524816114e8565b9050919050565b7f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b60006115616012836110c1565b915061156c8261152b565b602082019050919050565b6000602082019050818103600083015261159081611554565b9050919050565b60006040820190506115ac6000830185611062565b6115b96020830184611038565b9392505050565b7f556e737570706f72746564000000000000000000000000000000000000000000600082015250565b60006115f6600b836110c1565b9150611601826115c0565b602082019050919050565b60006020820190508181036000830152611625816115e9565b9050919050565b6000806040838503121561164357611642610f9e565b5b600061165185828601611374565b925050602061166285828601611374565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116a68261102e565b91506116b18361102e565b9250828210156116c4576116c361166c565b5b82820390509291505056fea2646970667358221220e6b7150dd1cedfccebc51317802a0db00eefeeac26df99a2cbf72a007b5dc83d64736f6c63430008090033";

type WorkerWonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorkerWonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorkerWon__factory extends ContractFactory {
  constructor(...args: WorkerWonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dataAddress: PromiseOrValue<string>,
    securityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WorkerWon> {
    return super.deploy(
      dataAddress,
      securityAddress,
      overrides || {}
    ) as Promise<WorkerWon>;
  }
  override getDeployTransaction(
    dataAddress: PromiseOrValue<string>,
    securityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      dataAddress,
      securityAddress,
      overrides || {}
    );
  }
  override attach(address: string): WorkerWon {
    return super.attach(address) as WorkerWon;
  }
  override connect(signer: Signer): WorkerWon__factory {
    return super.connect(signer) as WorkerWon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkerWonInterface {
    return new utils.Interface(_abi) as WorkerWonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorkerWon {
    return new Contract(address, _abi, signerOrProvider) as WorkerWon;
  }
}
