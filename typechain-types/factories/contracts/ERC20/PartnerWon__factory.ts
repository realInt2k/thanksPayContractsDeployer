/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PartnerWon,
  PartnerWonInterface,
} from "../../../contracts/ERC20/PartnerWon";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dataAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "securityAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPartnerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getWorkerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "for_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
    ],
    name: "readPartner",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
    ],
    name: "readWorker",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280601581526020017f5468616e6b7350617920506172746e657220576f6e000000000000000000000081525060039080519060200190620000519291906200017a565b506040518060400160405280600381526020017f5450570000000000000000000000000000000000000000000000000000000000815250600490805190602001906200009f9291906200017a565b506000600560006101000a81548160ff021916908360ff160217905550348015620000c957600080fd5b5060405162001e9c38038062001e9c8339818101604052810190620000ef919062000294565b81806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000340565b82805462000188906200030a565b90600052602060002090601f016020900481019282620001ac5760008555620001f8565b82601f10620001c757805160ff1916838001178555620001f8565b82800160010185558215620001f8579182015b82811115620001f7578251825591602001919060010190620001da565b5b5090506200020791906200020b565b5090565b5b80821115620002265760008160009055506001016200020c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200025c826200022f565b9050919050565b6200026e816200024f565b81146200027a57600080fd5b50565b6000815190506200028e8162000263565b92915050565b60008060408385031215620002ae57620002ad6200022a565b5b6000620002be858286016200027d565b9250506020620002d1858286016200027d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200032357607f821691505b602082108114156200033a5762000339620002db565b5b50919050565b611b4c80620003506000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80634d0de22511610097578063a9059cbb11610066578063a9059cbb146102b1578063ba49cdb5146102e1578063da1919b314610312578063dd62ed3e1461032e576100f5565b80634d0de2251461021757806370a082311461024757806379cc67901461027757806395d89b4114610293576100f5565b8063095ea7b3116100d3578063095ea7b31461017b57806318160ddd146101ab57806323b872dd146101c9578063313ce567146101f9576100f5565b8063016fa018146100fa578063065611551461012a57806306fdde031461015d575b600080fd5b610114600480360381019061010f91906114b1565b61035e565b60405161012191906114f7565b60405180910390f35b610144600480360381019061013f91906114b1565b610376565b6040516101549493929190611521565b60405180910390f35b610165610434565b60405161017291906115ff565b60405180910390f35b6101956004803603810190610190919061164d565b6104c2565b6040516101a291906116a8565b60405180910390f35b6101b3610668565b6040516101c091906114f7565b60405180910390f35b6101e360048036038101906101de91906116c3565b61066e565b6040516101f091906116a8565b60405180910390f35b6102016109b2565b60405161020e9190611732565b60405180910390f35b610231600480360381019061022c91906114b1565b6109c5565b60405161023e91906114f7565b60405180910390f35b610261600480360381019061025c91906114b1565b610a0e565b60405161026e91906114f7565b60405180910390f35b610291600480360381019061028c919061164d565b610a20565b005b61029b610e05565b6040516102a891906115ff565b60405180910390f35b6102cb60048036038101906102c6919061164d565b610e93565b6040516102d891906116a8565b60405180910390f35b6102fb60048036038101906102f691906114b1565b610fb8565b60405161030992919061174d565b60405180910390f35b61032c6004803603810190610327919061164d565b61106c565b005b61034860048036038101906103439190611776565b6113fd565b60405161035591906114f7565b60405180910390f35b60008061036a83610fb8565b50905080915050919050565b60008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634048a257866040518263ffffffff1660e01b81526004016103d591906117b6565b60806040518083038186803b1580156103ed57600080fd5b505afa158015610401573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042591906117fb565b93509350935093509193509193565b6003805461044190611891565b80601f016020809104026020016040519081016040528092919081815260200182805461046d90611891565b80156104ba5780601f1061048f576101008083540402835291602001916104ba565b820191906000526020600020905b81548152906001019060200180831161049d57829003601f168201915b505050505081565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b815260040161051f91906117b6565b60206040518083038186803b15801561053757600080fd5b505afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f91906118ef565b61057857600080fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161065691906114f7565b60405180910390a36001905092915050565b60015481565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016106cb91906117b6565b60206040518083038186803b1580156106e357600080fd5b505afa1580156106f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071b91906118ef565b61072457600080fd5b6107b382600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108c282600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461143890919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161099f91906114f7565b60405180910390a3600190509392505050565b600560009054906101000a900460ff1681565b60008060008060006109d686610376565b935093509350935060006109e983610fb8565b915050808211610a00578395505050505050610a09565b84955050505050505b919050565b6000610a198261035e565b9050919050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b8152600401610a7b91906117b6565b60206040518083038186803b158015610a9357600080fd5b505afa158015610aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acb91906118ef565b610ad457600080fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8990611968565b60405180910390fd5b80610b9c83610a0e565b11610bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd3906119d4565b60405180910390fd5b610c6b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142290919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000610cf68361035e565b9050610d0b828261142290919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369b43b5684836040518363ffffffff1660e01b8152600401610d689291906119f4565b600060405180830381600087803b158015610d8257600080fd5b505af1158015610d96573d6000803e3d6000fd5b50505050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610df891906114f7565b60405180910390a3505050565b60048054610e1290611891565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3e90611891565b8015610e8b5780601f10610e6057610100808354040283529160200191610e8b565b820191906000526020600020905b815481529060010190602001808311610e6e57829003601f168201915b505050505081565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b8152600401610ef091906117b6565b60206040518083038186803b158015610f0857600080fd5b505afa158015610f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4091906118ef565b610f4957600080fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fa691906114f7565b60405180910390a36001905092915050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395c33652846040518263ffffffff1660e01b815260040161101491906117b6565b604080518083038186803b15801561102b57600080fd5b505afa15801561103f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110639190611a1d565b91509150915091565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016110c791906117b6565b60206040518083038186803b1580156110df57600080fd5b505afa1580156110f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111791906118ef565b61112057600080fd5b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b815260040161117b91906117b6565b60206040518083038186803b15801561119357600080fd5b505afa1580156111a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cb91906118ef565b6111d457600080fd5b60006111df8361035e565b90506111f4828261143890919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369b43b5684836040518363ffffffff1660e01b81526004016112519291906119f4565b600060405180830381600087803b15801561126b57600080fd5b505af115801561127f573d6000803e3d6000fd5b5050505061131282600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461143890919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113f091906114f7565b60405180910390a3505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b600081836114309190611a8c565b905092915050565b600081836114469190611ac0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061147e82611453565b9050919050565b61148e81611473565b811461149957600080fd5b50565b6000813590506114ab81611485565b92915050565b6000602082840312156114c7576114c661144e565b5b60006114d58482850161149c565b91505092915050565b6000819050919050565b6114f1816114de565b82525050565b600060208201905061150c60008301846114e8565b92915050565b61151b81611473565b82525050565b600060808201905061153660008301876114e8565b61154360208301866114e8565b6115506040830185611512565b61155d60608301846114e8565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115a0578082015181840152602081019050611585565b838111156115af576000848401525b50505050565b6000601f19601f8301169050919050565b60006115d182611566565b6115db8185611571565b93506115eb818560208601611582565b6115f4816115b5565b840191505092915050565b6000602082019050818103600083015261161981846115c6565b905092915050565b61162a816114de565b811461163557600080fd5b50565b60008135905061164781611621565b92915050565b600080604083850312156116645761166361144e565b5b60006116728582860161149c565b925050602061168385828601611638565b9150509250929050565b60008115159050919050565b6116a28161168d565b82525050565b60006020820190506116bd6000830184611699565b92915050565b6000806000606084860312156116dc576116db61144e565b5b60006116ea8682870161149c565b93505060206116fb8682870161149c565b925050604061170c86828701611638565b9150509250925092565b600060ff82169050919050565b61172c81611716565b82525050565b60006020820190506117476000830184611723565b92915050565b600060408201905061176260008301856114e8565b61176f60208301846114e8565b9392505050565b6000806040838503121561178d5761178c61144e565b5b600061179b8582860161149c565b92505060206117ac8582860161149c565b9150509250929050565b60006020820190506117cb6000830184611512565b92915050565b6000815190506117e081611621565b92915050565b6000815190506117f581611485565b92915050565b600080600080608085870312156118155761181461144e565b5b6000611823878288016117d1565b9450506020611834878288016117d1565b9350506040611845878288016117e6565b9250506060611856878288016117d1565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118a957607f821691505b602082108114156118bd576118bc611862565b5b50919050565b6118cc8161168d565b81146118d757600080fd5b50565b6000815190506118e9816118c3565b92915050565b6000602082840312156119055761190461144e565b5b6000611913848285016118da565b91505092915050565b7f4e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000600082015250565b6000611952601483611571565b915061195d8261191c565b602082019050919050565b6000602082019050818103600083015261198181611945565b9050919050565b7f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b60006119be601283611571565b91506119c982611988565b602082019050919050565b600060208201905081810360008301526119ed816119b1565b9050919050565b6000604082019050611a096000830185611512565b611a1660208301846114e8565b9392505050565b60008060408385031215611a3457611a3361144e565b5b6000611a42858286016117d1565b9250506020611a53858286016117d1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a97826114de565b9150611aa2836114de565b925082821015611ab557611ab4611a5d565b5b828203905092915050565b6000611acb826114de565b9150611ad6836114de565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b0b57611b0a611a5d565b5b82820190509291505056fea2646970667358221220f0095f7585fa2eac3fe2ad10b1c75bf0062eaa04dca3023e01f7d574caf310e064736f6c63430008090033";

type PartnerWonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PartnerWonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PartnerWon__factory extends ContractFactory {
  constructor(...args: PartnerWonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dataAddress: PromiseOrValue<string>,
    securityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PartnerWon> {
    return super.deploy(
      dataAddress,
      securityAddress,
      overrides || {}
    ) as Promise<PartnerWon>;
  }
  override getDeployTransaction(
    dataAddress: PromiseOrValue<string>,
    securityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      dataAddress,
      securityAddress,
      overrides || {}
    );
  }
  override attach(address: string): PartnerWon {
    return super.attach(address) as PartnerWon;
  }
  override connect(signer: Signer): PartnerWon__factory {
    return super.connect(signer) as PartnerWon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PartnerWonInterface {
    return new utils.Interface(_abi) as PartnerWonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PartnerWon {
    return new Contract(address, _abi, signerOrProvider) as PartnerWon;
  }
}
