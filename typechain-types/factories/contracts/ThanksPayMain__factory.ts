/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ThanksPayMain,
  ThanksPayMainInterface,
} from "../../contracts/ThanksPayMain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_security",
        type: "address",
      },
      {
        internalType: "address",
        name: "dataAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_check",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "revertEmpty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "exitCode",
        type: "uint16",
      },
    ],
    name: "revertExitCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "revertReason",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerGotBonus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "bankReceipt",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "workerGotThanksPay",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerAddBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerAddBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "condition",
        type: "bool",
      },
    ],
    name: "revertCheck",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "condition",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "revertCheck",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "condition",
        type: "bool",
      },
      {
        internalType: "uint16",
        name: "exitCode",
        type: "uint16",
      },
    ],
    name: "revertCheck",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "setLatestWagePay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "subtractFromPartner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "bankReceipt",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "workerGetsThanksPay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e9038038062001e9083398181016040528101906200003791906200016e565b82806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001ca565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001368262000109565b9050919050565b620001488162000129565b81146200015457600080fd5b50565b60008151905062000168816200013d565b92915050565b6000806000606084860312156200018a576200018962000104565b5b60006200019a8682870162000157565b9350506020620001ad8682870162000157565b9250506040620001c08682870162000157565b9150509250925092565b611cb680620001da6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806369821b7d1161006657806369821b7d146101085780639babbec414610124578063d5ea23d614610140578063d60a7f6a1461015c578063f31a43281461017857610093565b806303952c621461009857806308706651146100b45780631713f266146100d05780635b441cc0146100ec575b600080fd5b6100b260048036038101906100ad9190611450565b610194565b005b6100ce60048036038101906100c991906114e2565b6101ce565b005b6100ea60048036038101906100e59190611578565b610217565b005b61010660048036038101906101019190611578565b61045e565b005b610122600480360381019061011d9190611578565b61075c565b005b61013e600480360381019061013991906116f9565b6108e0565b005b61015a600480360381019061015591906117ca565b610cbe565b005b61017660048036038101906101719190611578565b610d04565b005b610192600480360381019061018d9190611578565b611154565b005b806101cb576040517f4926c4c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b826102125781816040517f88720fae000000000000000000000000000000000000000000000000000000008152600401610209929190611848565b60405180910390fd5b505050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b815260040161027591906118ad565b60206040518083038186803b15801561028d57600080fd5b505afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c591906118dd565b151514610307576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fe90611956565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619856040518263ffffffff1660e01b81526004016103649190611985565b60606040518083038186803b15801561037c57600080fd5b505afa158015610390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b491906119b5565b50509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb38561040986856113d890919063ffffffff16565b6040518363ffffffff1660e01b8152600401610426929190611a08565b600060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b5050505050505050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b81526004016104bc91906118ad565b60206040518083038186803b1580156104d457600080fd5b505afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c91906118dd565b15151461054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054590611956565b60405180910390fd5b610605600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa7905b085856040518363ffffffff1660e01b81526004016105ae929190611a08565b60206040518083038186803b1580156105c657600080fd5b505afa1580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe91906118dd565b6002610cbe565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619856040518263ffffffff1660e01b81526004016106629190611985565b60606040518083038186803b15801561067a57600080fd5b505afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b291906119b5565b50509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb38561070786856113ee90919063ffffffff16565b6040518363ffffffff1660e01b8152600401610724929190611a08565b600060405180830381600087803b15801561073e57600080fd5b505af1158015610752573d6000803e3d6000fd5b5050505050505050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b81526004016107ba91906118ad565b60206040518083038186803b1580156107d257600080fd5b505afa1580156107e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080a91906118dd565b15151461084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084390611956565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369821b7d84846040518363ffffffff1660e01b81526004016108a9929190611a08565b600060405180830381600087803b1580156108c357600080fd5b505af11580156108d7573d6000803e3d6000fd5b50505050505050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b815260040161093e91906118ad565b60206040518083038186803b15801561095657600080fd5b505afa15801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e91906118dd565b1515146109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c790611956565b60405180910390fd5b610a87600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a72ee0b988876040518363ffffffff1660e01b8152600401610a30929190611a08565b60206040518083038186803b158015610a4857600080fd5b505afa158015610a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8091906118dd565b6003610cbe565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638fe9e3d4886040518263ffffffff1660e01b8152600401610ae49190611985565b60206040518083038186803b158015610afc57600080fd5b505afa158015610b10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b349190611a31565b90506000610b4b86836113ee90919063ffffffff16565b9050610b578787610d04565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663571f2f6d89836040518363ffffffff1660e01b8152600401610bb4929190611a08565b600060405180830381600087803b158015610bce57600080fd5b505af1158015610be2573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dfd9c72689866040518363ffffffff1660e01b8152600401610c43929190611a08565b600060405180830381600087803b158015610c5d57600080fd5b505af1158015610c71573d6000803e3d6000fd5b505050507f56ad4ec6e58c47b0bf0780892fb02b22edbda6d8d348aaa5417e743cf69159018888888888604051610cac959493929190611ad5565b60405180910390a15050505050505050565b81610d0057806040517f8604d400000000000000000000000000000000000000000000000000000000008152600401610cf79190611b3e565b60405180910390fd5b5050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b8152600401610d6291906118ad565b60206040518083038186803b158015610d7a57600080fd5b505afa158015610d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db291906118dd565b151514610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb90611956565b60405180910390fd5b610eab600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd0cb36885856040518363ffffffff1660e01b8152600401610e54929190611a08565b60206040518083038186803b158015610e6c57600080fd5b505afa158015610e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea491906118dd565b6001610cbe565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619866040518263ffffffff1660e01b8152600401610f099190611985565b60606040518083038186803b158015610f2157600080fd5b505afa158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5991906119b5565b509150915081841161100a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb386610fb687866113ee90919063ffffffff16565b6040518363ffffffff1660e01b8152600401610fd3929190611a08565b600060405180830381600087803b158015610fed57600080fd5b505af1158015611001573d6000803e3d6000fd5b5050505061114d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb38660006040518363ffffffff1660e01b8152600401611067929190611b9e565b600060405180830381600087803b15801561108157600080fd5b505af1158015611095573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff6d3837866110fd6110ee86896113ee90919063ffffffff16565b856113ee90919063ffffffff16565b6040518363ffffffff1660e01b815260040161111a929190611a08565b600060405180830381600087803b15801561113457600080fd5b505af1158015611148573d6000803e3d6000fd5b505050505b5050505050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b81526004016111b291906118ad565b60206040518083038186803b1580156111ca57600080fd5b505afa1580156111de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120291906118dd565b151514611244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123b90611956565b60405180910390fd5b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619866040518263ffffffff1660e01b81526004016112a29190611985565b60606040518083038186803b1580156112ba57600080fd5b505afa1580156112ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f291906119b5565b5091509150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff6d38378661134987856113d890919063ffffffff16565b6040518363ffffffff1660e01b8152600401611366929190611a08565b600060405180830381600087803b15801561138057600080fd5b505af1158015611394573d6000803e3d6000fd5b505050507fa682581ca3def408fb7d1d64f2ef32a7f73145d7e3e4feba51a54fe8f88d714085856040516113c9929190611a08565b60405180910390a15050505050565b600081836113e69190611bf6565b905092915050565b600081836113fc9190611c4c565b905092915050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b61142d81611418565b811461143857600080fd5b50565b60008135905061144a81611424565b92915050565b6000602082840312156114665761146561140e565b5b60006114748482850161143b565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114a2576114a161147d565b5b8235905067ffffffffffffffff8111156114bf576114be611482565b5b6020830191508360018202830111156114db576114da611487565b5b9250929050565b6000806000604084860312156114fb576114fa61140e565b5b60006115098682870161143b565b935050602084013567ffffffffffffffff81111561152a57611529611413565b5b6115368682870161148c565b92509250509250925092565b6000819050919050565b61155581611542565b811461156057600080fd5b50565b6000813590506115728161154c565b92915050565b6000806040838503121561158f5761158e61140e565b5b600061159d85828601611563565b92505060206115ae85828601611563565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611606826115bd565b810181811067ffffffffffffffff82111715611625576116246115ce565b5b80604052505050565b6000611638611404565b905061164482826115fd565b919050565b600067ffffffffffffffff821115611664576116636115ce565b5b61166d826115bd565b9050602081019050919050565b82818337600083830152505050565b600061169c61169784611649565b61162e565b9050828152602081018484840111156116b8576116b76115b8565b5b6116c384828561167a565b509392505050565b600082601f8301126116e0576116df61147d565b5b81356116f0848260208601611689565b91505092915050565b600080600080600060a086880312156117155761171461140e565b5b600061172388828901611563565b955050602061173488828901611563565b945050604061174588828901611563565b935050606086013567ffffffffffffffff81111561176657611765611413565b5b611772888289016116cb565b925050608061178388828901611563565b9150509295509295909350565b600061ffff82169050919050565b6117a781611790565b81146117b257600080fd5b50565b6000813590506117c48161179e565b92915050565b600080604083850312156117e1576117e061140e565b5b60006117ef8582860161143b565b9250506020611800858286016117b5565b9150509250929050565b600082825260208201905092915050565b6000611827838561180a565b935061183483858461167a565b61183d836115bd565b840190509392505050565b6000602082019050818103600083015261186381848661181b565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118978261186c565b9050919050565b6118a78161188c565b82525050565b60006020820190506118c2600083018461189e565b92915050565b6000815190506118d781611424565b92915050565b6000602082840312156118f3576118f261140e565b5b6000611901848285016118c8565b91505092915050565b7f4655434b00000000000000000000000000000000000000000000000000000000600082015250565b600061194060048361180a565b915061194b8261190a565b602082019050919050565b6000602082019050818103600083015261196f81611933565b9050919050565b61197f81611542565b82525050565b600060208201905061199a6000830184611976565b92915050565b6000815190506119af8161154c565b92915050565b6000806000606084860312156119ce576119cd61140e565b5b60006119dc868287016119a0565b93505060206119ed868287016119a0565b92505060406119fe868287016119a0565b9150509250925092565b6000604082019050611a1d6000830185611976565b611a2a6020830184611976565b9392505050565b600060208284031215611a4757611a4661140e565b5b6000611a55848285016119a0565b91505092915050565b600081519050919050565b60005b83811015611a87578082015181840152602081019050611a6c565b83811115611a96576000848401525b50505050565b6000611aa782611a5e565b611ab1818561180a565b9350611ac1818560208601611a69565b611aca816115bd565b840191505092915050565b600060a082019050611aea6000830188611976565b611af76020830187611976565b611b046040830186611976565b8181036060830152611b168185611a9c565b9050611b256080830184611976565b9695505050505050565b611b3881611790565b82525050565b6000602082019050611b536000830184611b2f565b92915050565b6000819050919050565b6000819050919050565b6000611b88611b83611b7e84611b59565b611b63565b611542565b9050919050565b611b9881611b6d565b82525050565b6000604082019050611bb36000830185611976565b611bc06020830184611b8f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c0182611542565b9150611c0c83611542565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c4157611c40611bc7565b5b828201905092915050565b6000611c5782611542565b9150611c6283611542565b925082821015611c7557611c74611bc7565b5b82820390509291505056fea264697066735822122001e36df1b7d0a79ca4da1a10330cc5215e6995433414bd56e832984f1567637f64736f6c63430008090033";

type ThanksPayMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThanksPayMainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ThanksPayMain__factory extends ContractFactory {
  constructor(...args: ThanksPayMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _security: PromiseOrValue<string>,
    dataAddr: PromiseOrValue<string>,
    _check: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ThanksPayMain> {
    return super.deploy(
      _security,
      dataAddr,
      _check,
      overrides || {}
    ) as Promise<ThanksPayMain>;
  }
  override getDeployTransaction(
    _security: PromiseOrValue<string>,
    dataAddr: PromiseOrValue<string>,
    _check: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _security,
      dataAddr,
      _check,
      overrides || {}
    );
  }
  override attach(address: string): ThanksPayMain {
    return super.attach(address) as ThanksPayMain;
  }
  override connect(signer: Signer): ThanksPayMain__factory {
    return super.connect(signer) as ThanksPayMain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThanksPayMainInterface {
    return new utils.Interface(_abi) as ThanksPayMainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThanksPayMain {
    return new Contract(address, _abi, signerOrProvider) as ThanksPayMain;
  }
}
