/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ThanksPayMain,
  ThanksPayMainInterface,
} from "../../contracts/ThanksPayMain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_security",
        type: "address",
      },
      {
        internalType: "address",
        name: "dataAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerGotBonus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "bankReceipt",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "workerGotThanksPay",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerAddBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerAddBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "setLatestWagePay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "subtractFromPartner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "bankReceipt",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "workerGetsThanksPay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014c7380380620014c783398181016040528101906200003791906200012c565b81806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000173565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f482620000c7565b9050919050565b6200010681620000e7565b81146200011257600080fd5b50565b6000815190506200012681620000fb565b92915050565b60008060408385031215620001465762000145620000c2565b5b6000620001568582860162000115565b9250506020620001698582860162000115565b9150509250929050565b61134480620001836000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631713f2661461005c57806369821b7d146100785780639babbec414610094578063d60a7f6a146100b0578063f31a4328146100cc575b600080fd5b61007660048036038101906100719190610d3f565b6100e8565b005b610092600480360381019061008d9190610d3f565b6102f5565b005b6100ae60048036038101906100a99190610ec5565b61043c565b005b6100ca60048036038101906100c59190610d3f565b610726565b005b6100e660048036038101906100e19190610d3f565b610a82565b005b3360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80826040518263ffffffff1660e01b81526004016101429190610f9d565b60206040518083038186803b15801561015a57600080fd5b505afa15801561016e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101929190610ff0565b61019b57600080fd5b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619866040518263ffffffff1660e01b81526004016101f9919061102c565b60606040518083038186803b15801561021157600080fd5b505afa158015610225573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610249919061105c565b5091509150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb38661029f8786610cc990919063ffffffff16565b6040518363ffffffff1660e01b81526004016102bc9291906110af565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505050505050565b3360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80826040518263ffffffff1660e01b815260040161034f9190610f9d565b60206040518083038186803b15801561036757600080fd5b505afa15801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610ff0565b6103a857600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369821b7d84846040518363ffffffff1660e01b81526004016104059291906110af565b600060405180830381600087803b15801561041f57600080fd5b505af1158015610433573d6000803e3d6000fd5b50505050505050565b3360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80826040518263ffffffff1660e01b81526004016104969190610f9d565b60206040518083038186803b1580156104ae57600080fd5b505afa1580156104c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e69190610ff0565b6104ef57600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638fe9e3d4886040518263ffffffff1660e01b815260040161054c919061102c565b60206040518083038186803b15801561056457600080fd5b505afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c91906110d8565b905060006105b38683610cdf90919063ffffffff16565b90506105bf8787610726565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663571f2f6d89836040518363ffffffff1660e01b815260040161061c9291906110af565b600060405180830381600087803b15801561063657600080fd5b505af115801561064a573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dfd9c72689866040518363ffffffff1660e01b81526004016106ab9291906110af565b600060405180830381600087803b1580156106c557600080fd5b505af11580156106d9573d6000803e3d6000fd5b505050507f56ad4ec6e58c47b0bf0780892fb02b22edbda6d8d348aaa5417e743cf6915901888888888860405161071495949392919061118d565b60405180910390a15050505050505050565b3360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80826040518263ffffffff1660e01b81526004016107809190610f9d565b60206040518083038186803b15801561079857600080fd5b505afa1580156107ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d09190610ff0565b6107d957600080fd5b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619866040518263ffffffff1660e01b8152600401610837919061102c565b60606040518083038186803b15801561084f57600080fd5b505afa158015610863573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610887919061105c565b509150915081841161093857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb3866108e48786610cdf90919063ffffffff16565b6040518363ffffffff1660e01b81526004016109019291906110af565b600060405180830381600087803b15801561091b57600080fd5b505af115801561092f573d6000803e3d6000fd5b50505050610a7b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb38660006040518363ffffffff1660e01b815260040161099592919061122c565b600060405180830381600087803b1580156109af57600080fd5b505af11580156109c3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff6d383786610a2b610a1c8689610cdf90919063ffffffff16565b85610cdf90919063ffffffff16565b6040518363ffffffff1660e01b8152600401610a489291906110af565b600060405180830381600087803b158015610a6257600080fd5b505af1158015610a76573d6000803e3d6000fd5b505050505b5050505050565b3360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80826040518263ffffffff1660e01b8152600401610adc9190610f9d565b60206040518083038186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190610ff0565b610b3557600080fd5b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619866040518263ffffffff1660e01b8152600401610b93919061102c565b60606040518083038186803b158015610bab57600080fd5b505afa158015610bbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be3919061105c565b5091509150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff6d383786610c3a8785610cc990919063ffffffff16565b6040518363ffffffff1660e01b8152600401610c579291906110af565b600060405180830381600087803b158015610c7157600080fd5b505af1158015610c85573d6000803e3d6000fd5b505050507fa682581ca3def408fb7d1d64f2ef32a7f73145d7e3e4feba51a54fe8f88d71408585604051610cba9291906110af565b60405180910390a15050505050565b60008183610cd79190611284565b905092915050565b60008183610ced91906112da565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d1c81610d09565b8114610d2757600080fd5b50565b600081359050610d3981610d13565b92915050565b60008060408385031215610d5657610d55610cff565b5b6000610d6485828601610d2a565b9250506020610d7585828601610d2a565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610dd282610d89565b810181811067ffffffffffffffff82111715610df157610df0610d9a565b5b80604052505050565b6000610e04610cf5565b9050610e108282610dc9565b919050565b600067ffffffffffffffff821115610e3057610e2f610d9a565b5b610e3982610d89565b9050602081019050919050565b82818337600083830152505050565b6000610e68610e6384610e15565b610dfa565b905082815260208101848484011115610e8457610e83610d84565b5b610e8f848285610e46565b509392505050565b600082601f830112610eac57610eab610d7f565b5b8135610ebc848260208601610e55565b91505092915050565b600080600080600060a08688031215610ee157610ee0610cff565b5b6000610eef88828901610d2a565b9550506020610f0088828901610d2a565b9450506040610f1188828901610d2a565b935050606086013567ffffffffffffffff811115610f3257610f31610d04565b5b610f3e88828901610e97565b9250506080610f4f88828901610d2a565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8782610f5c565b9050919050565b610f9781610f7c565b82525050565b6000602082019050610fb26000830184610f8e565b92915050565b60008115159050919050565b610fcd81610fb8565b8114610fd857600080fd5b50565b600081519050610fea81610fc4565b92915050565b60006020828403121561100657611005610cff565b5b600061101484828501610fdb565b91505092915050565b61102681610d09565b82525050565b6000602082019050611041600083018461101d565b92915050565b60008151905061105681610d13565b92915050565b60008060006060848603121561107557611074610cff565b5b600061108386828701611047565b935050602061109486828701611047565b92505060406110a586828701611047565b9150509250925092565b60006040820190506110c4600083018561101d565b6110d1602083018461101d565b9392505050565b6000602082840312156110ee576110ed610cff565b5b60006110fc84828501611047565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561113f578082015181840152602081019050611124565b8381111561114e576000848401525b50505050565b600061115f82611105565b6111698185611110565b9350611179818560208601611121565b61118281610d89565b840191505092915050565b600060a0820190506111a2600083018861101d565b6111af602083018761101d565b6111bc604083018661101d565b81810360608301526111ce8185611154565b90506111dd608083018461101d565b9695505050505050565b6000819050919050565b6000819050919050565b600061121661121161120c846111e7565b6111f1565b610d09565b9050919050565b611226816111fb565b82525050565b6000604082019050611241600083018561101d565b61124e602083018461121d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061128f82610d09565b915061129a83610d09565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112cf576112ce611255565b5b828201905092915050565b60006112e582610d09565b91506112f083610d09565b92508282101561130357611302611255565b5b82820390509291505056fea264697066735822122072655b2c78de264a9c854268208593b4365dcaf92007c23aa0067ccfac96a62264736f6c63430008090033";

type ThanksPayMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThanksPayMainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ThanksPayMain__factory extends ContractFactory {
  constructor(...args: ThanksPayMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _security: PromiseOrValue<string>,
    dataAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ThanksPayMain> {
    return super.deploy(
      _security,
      dataAddr,
      overrides || {}
    ) as Promise<ThanksPayMain>;
  }
  override getDeployTransaction(
    _security: PromiseOrValue<string>,
    dataAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_security, dataAddr, overrides || {});
  }
  override attach(address: string): ThanksPayMain {
    return super.attach(address) as ThanksPayMain;
  }
  override connect(signer: Signer): ThanksPayMain__factory {
    return super.connect(signer) as ThanksPayMain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThanksPayMainInterface {
    return new utils.Interface(_abi) as ThanksPayMainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThanksPayMain {
    return new Contract(address, _abi, signerOrProvider) as ThanksPayMain;
  }
}
