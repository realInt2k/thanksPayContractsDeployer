/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ThanksPayMain,
  ThanksPayMainInterface,
} from "../../contracts/ThanksPayMain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_security",
        type: "address",
      },
      {
        internalType: "address",
        name: "dataAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerGotBonus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "bankReceipt",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "workerGotThanksPay",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerAddBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerAddBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "partnerWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "setLatestWagePay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "subtractFromPartner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "bankReceipt",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "workerGetsThanksPay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018cf380380620018cf83398181016040528101906200003791906200012c565b81806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000173565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f482620000c7565b9050919050565b6200010681620000e7565b81146200011257600080fd5b50565b6000815190506200012681620000fb565b92915050565b60008060408385031215620001465762000145620000c2565b5b6000620001568582860162000115565b9250506020620001698582860162000115565b9150509250929050565b61174c80620001836000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631713f266146100675780635b441cc01461008357806369821b7d1461009f5780639babbec4146100bb578063d60a7f6a146100d7578063f31a4328146100f3575b600080fd5b610081600480360381019061007c91906110db565b61010f565b005b61009d600480360381019061009891906110db565b610356565b005b6100b960048036038101906100b491906110db565b61059d565b005b6100d560048036038101906100d09190611261565b610721565b005b6100f160048036038101906100ec91906110db565b610a48565b005b61010d600480360381019061010891906110db565b610de1565b005b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b815260040161016d9190611339565b60206040518083038186803b15801561018557600080fd5b505afa158015610199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bd919061138c565b1515146101ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f690611416565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619856040518263ffffffff1660e01b815260040161025c9190611445565b60606040518083038186803b15801561027457600080fd5b505afa158015610288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ac9190611475565b50509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb385610301868561106590919063ffffffff16565b6040518363ffffffff1660e01b815260040161031e9291906114c8565b600060405180830381600087803b15801561033857600080fd5b505af115801561034c573d6000803e3d6000fd5b5050505050505050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b81526004016103b49190611339565b60206040518083038186803b1580156103cc57600080fd5b505afa1580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610404919061138c565b151514610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d90611416565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619856040518263ffffffff1660e01b81526004016104a39190611445565b60606040518083038186803b1580156104bb57600080fd5b505afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190611475565b50509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb385610548868561107b90919063ffffffff16565b6040518363ffffffff1660e01b81526004016105659291906114c8565b600060405180830381600087803b15801561057f57600080fd5b505af1158015610593573d6000803e3d6000fd5b5050505050505050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b81526004016105fb9190611339565b60206040518083038186803b15801561061357600080fd5b505afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b919061138c565b15151461068d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068490611416565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369821b7d84846040518363ffffffff1660e01b81526004016106ea9291906114c8565b600060405180830381600087803b15801561070457600080fd5b505af1158015610718573d6000803e3d6000fd5b50505050505050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b815260040161077f9190611339565b60206040518083038186803b15801561079757600080fd5b505afa1580156107ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cf919061138c565b151514610811576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080890611416565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638fe9e3d4886040518263ffffffff1660e01b815260040161086e9190611445565b60206040518083038186803b15801561088657600080fd5b505afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be91906114f1565b905060006108d5868361107b90919063ffffffff16565b90506108e18787610a48565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663571f2f6d89836040518363ffffffff1660e01b815260040161093e9291906114c8565b600060405180830381600087803b15801561095857600080fd5b505af115801561096c573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dfd9c72689866040518363ffffffff1660e01b81526004016109cd9291906114c8565b600060405180830381600087803b1580156109e757600080fd5b505af11580156109fb573d6000803e3d6000fd5b505050507f56ad4ec6e58c47b0bf0780892fb02b22edbda6d8d348aaa5417e743cf69159018888888888604051610a36959493929190611595565b60405180910390a15050505050505050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b8152600401610aa69190611339565b60206040518083038186803b158015610abe57600080fd5b505afa158015610ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af6919061138c565b151514610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f90611416565b60405180910390fd5b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619866040518263ffffffff1660e01b8152600401610b969190611445565b60606040518083038186803b158015610bae57600080fd5b505afa158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be69190611475565b5091509150818411610c9757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb386610c43878661107b90919063ffffffff16565b6040518363ffffffff1660e01b8152600401610c609291906114c8565b600060405180830381600087803b158015610c7a57600080fd5b505af1158015610c8e573d6000803e3d6000fd5b50505050610dda565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662581cb38660006040518363ffffffff1660e01b8152600401610cf4929190611634565b600060405180830381600087803b158015610d0e57600080fd5b505af1158015610d22573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff6d383786610d8a610d7b868961107b90919063ffffffff16565b8561107b90919063ffffffff16565b6040518363ffffffff1660e01b8152600401610da79291906114c8565b600060405180830381600087803b158015610dc157600080fd5b505af1158015610dd5573d6000803e3d6000fd5b505050505b5050505050565b336001151560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b8152600401610e3f9190611339565b60206040518083038186803b158015610e5757600080fd5b505afa158015610e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8f919061138c565b151514610ed1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec890611416565b60405180910390fd5b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fc96619866040518263ffffffff1660e01b8152600401610f2f9190611445565b60606040518083038186803b158015610f4757600080fd5b505afa158015610f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7f9190611475565b5091509150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff6d383786610fd6878561106590919063ffffffff16565b6040518363ffffffff1660e01b8152600401610ff39291906114c8565b600060405180830381600087803b15801561100d57600080fd5b505af1158015611021573d6000803e3d6000fd5b505050507fa682581ca3def408fb7d1d64f2ef32a7f73145d7e3e4feba51a54fe8f88d714085856040516110569291906114c8565b60405180910390a15050505050565b60008183611073919061168c565b905092915050565b6000818361108991906116e2565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6110b8816110a5565b81146110c357600080fd5b50565b6000813590506110d5816110af565b92915050565b600080604083850312156110f2576110f161109b565b5b6000611100858286016110c6565b9250506020611111858286016110c6565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61116e82611125565b810181811067ffffffffffffffff8211171561118d5761118c611136565b5b80604052505050565b60006111a0611091565b90506111ac8282611165565b919050565b600067ffffffffffffffff8211156111cc576111cb611136565b5b6111d582611125565b9050602081019050919050565b82818337600083830152505050565b60006112046111ff846111b1565b611196565b9050828152602081018484840111156112205761121f611120565b5b61122b8482856111e2565b509392505050565b600082601f8301126112485761124761111b565b5b81356112588482602086016111f1565b91505092915050565b600080600080600060a0868803121561127d5761127c61109b565b5b600061128b888289016110c6565b955050602061129c888289016110c6565b94505060406112ad888289016110c6565b935050606086013567ffffffffffffffff8111156112ce576112cd6110a0565b5b6112da88828901611233565b92505060806112eb888289016110c6565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611323826112f8565b9050919050565b61133381611318565b82525050565b600060208201905061134e600083018461132a565b92915050565b60008115159050919050565b61136981611354565b811461137457600080fd5b50565b60008151905061138681611360565b92915050565b6000602082840312156113a2576113a161109b565b5b60006113b084828501611377565b91505092915050565b600082825260208201905092915050565b7f4655434b00000000000000000000000000000000000000000000000000000000600082015250565b60006114006004836113b9565b915061140b826113ca565b602082019050919050565b6000602082019050818103600083015261142f816113f3565b9050919050565b61143f816110a5565b82525050565b600060208201905061145a6000830184611436565b92915050565b60008151905061146f816110af565b92915050565b60008060006060848603121561148e5761148d61109b565b5b600061149c86828701611460565b93505060206114ad86828701611460565b92505060406114be86828701611460565b9150509250925092565b60006040820190506114dd6000830185611436565b6114ea6020830184611436565b9392505050565b6000602082840312156115075761150661109b565b5b600061151584828501611460565b91505092915050565b600081519050919050565b60005b8381101561154757808201518184015260208101905061152c565b83811115611556576000848401525b50505050565b60006115678261151e565b61157181856113b9565b9350611581818560208601611529565b61158a81611125565b840191505092915050565b600060a0820190506115aa6000830188611436565b6115b76020830187611436565b6115c46040830186611436565b81810360608301526115d6818561155c565b90506115e56080830184611436565b9695505050505050565b6000819050919050565b6000819050919050565b600061161e611619611614846115ef565b6115f9565b6110a5565b9050919050565b61162e81611603565b82525050565b60006040820190506116496000830185611436565b6116566020830184611625565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611697826110a5565b91506116a2836110a5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116d7576116d661165d565b5b828201905092915050565b60006116ed826110a5565b91506116f8836110a5565b92508282101561170b5761170a61165d565b5b82820390509291505056fea264697066735822122046bbf673b145c5ad2603f848fc15fd50d0eab772c7ba7d678f7683b8d68b931564736f6c63430008090033";

type ThanksPayMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThanksPayMainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ThanksPayMain__factory extends ContractFactory {
  constructor(...args: ThanksPayMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _security: PromiseOrValue<string>,
    dataAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ThanksPayMain> {
    return super.deploy(
      _security,
      dataAddr,
      overrides || {}
    ) as Promise<ThanksPayMain>;
  }
  override getDeployTransaction(
    _security: PromiseOrValue<string>,
    dataAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_security, dataAddr, overrides || {});
  }
  override attach(address: string): ThanksPayMain {
    return super.attach(address) as ThanksPayMain;
  }
  override connect(signer: Signer): ThanksPayMain__factory {
    return super.connect(signer) as ThanksPayMain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThanksPayMainInterface {
    return new utils.Interface(_abi) as ThanksPayMainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThanksPayMain {
    return new Contract(address, _abi, signerOrProvider) as ThanksPayMain;
  }
}
