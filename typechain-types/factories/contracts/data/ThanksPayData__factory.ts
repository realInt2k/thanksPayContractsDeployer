/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ThanksPayData,
  ThanksPayDataInterface,
} from "../../../contracts/data/ThanksPayData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "securityAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relativePayday",
        type: "uint256",
      },
    ],
    name: "companyPoolRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "partnerBalanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relativePayday",
        type: "uint256",
      },
    ],
    name: "partnerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "workerBalanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "wId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
    ],
    name: "workerRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "companyPools",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "partners",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "relativePayday",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "relativePayday",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    name: "registerPartner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
    ],
    name: "registerWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    name: "setLatestRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "setPartnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "relativePayday",
        type: "uint256",
      },
    ],
    name: "setRelativePayday",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "setWorkerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "types",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "workers",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000f7f38038062000f7f833981810160405281019061003491906100dd565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100aa8261007f565b9050919050565b6100ba8161009f565b81146100c557600080fd5b50565b6000815190506100d7816100b1565b92915050565b6000602082840312156100f3576100f261007a565b5b6000610101848285016100c8565b91505092915050565b610e65806200011a6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806369b43b561161006657806369b43b561461016e57806395c336521461018a578063beee8cf9146101bc578063d5962e8f146101d8578063fbebd6c1146101f45761009e565b806309b9aef3146100a35780631a078ed8146100d35780633c2bbd19146100ef5780634048a2571461011f5780635b69860b14610152575b600080fd5b6100bd60048036038101906100b89190610b51565b610210565b6040516100ca9190610b97565b60405180910390f35b6100ed60048036038101906100e89190610bde565b610228565b005b61010960048036038101906101049190610b51565b61043f565b6040516101169190610b97565b60405180910390f35b61013960048036038101906101349190610b51565b61045d565b6040516101499493929190610c40565b60405180910390f35b61016c60048036038101906101679190610c85565b6104ad565b005b61018860048036038101906101839190610c85565b6105aa565b005b6101a4600480360381019061019f9190610b51565b6106e0565b6040516101b393929190610cc5565b60405180910390f35b6101d660048036038101906101d19190610c85565b61070a565b005b6101f260048036038101906101ed9190610c85565b610840565b005b61020e60048036038101906102099190610cfc565b61093d565b005b60046020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016102819190610d4f565b60206040518083038186803b15801561029957600080fd5b505afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190610da2565b6102da57600080fd5b6040518060800160405280600081526020018281526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301559050506002600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f56f761bd6e53ed4ba3090c7eae15640bd1d25ee4db8acb2b0cd835c9142ba6d083838360405161043293929190610dcf565b60405180910390a1505050565b60036020528060005260406000206000915090508060000154905081565b60016020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016105069190610d4f565b60206040518083038186803b15801561051e57600080fd5b505afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610da2565b61055f57600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016106039190610d4f565b60206040518083038186803b15801561061b57600080fd5b505afa15801561062f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106539190610da2565b61065c57600080fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507f0c3bcae7e61591af02bb2812a964a3d2b74e34edae27feca4b070cd7b8959b4482826040516106d4929190610e06565b60405180910390a15050565b60026020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016107639190610d4f565b60206040518083038186803b15801561077b57600080fd5b505afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b39190610da2565b6107bc57600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507f0c3bcae7e61591af02bb2812a964a3d2b74e34edae27feca4b070cd7b8959b448282604051610834929190610e06565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016108999190610d4f565b60206040518083038186803b1580156108b157600080fd5b505afa1580156108c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e99190610da2565b6108f257600080fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016109969190610d4f565b60206040518083038186803b1580156109ae57600080fd5b505afa1580156109c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e69190610da2565b6109ef57600080fd5b60405180606001604052806000815260200183815260200182815250600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050506001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f4944f1bb890742e6929853c2e03499a2438afb211e23e1cc762a64423e60d81e8383604051610ae1929190610e06565b60405180910390a1505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1e82610af3565b9050919050565b610b2e81610b13565b8114610b3957600080fd5b50565b600081359050610b4b81610b25565b92915050565b600060208284031215610b6757610b66610aee565b5b6000610b7584828501610b3c565b91505092915050565b6000819050919050565b610b9181610b7e565b82525050565b6000602082019050610bac6000830184610b88565b92915050565b610bbb81610b7e565b8114610bc657600080fd5b50565b600081359050610bd881610bb2565b92915050565b600080600060608486031215610bf757610bf6610aee565b5b6000610c0586828701610b3c565b9350506020610c1686828701610b3c565b9250506040610c2786828701610bc9565b9150509250925092565b610c3a81610b13565b82525050565b6000608082019050610c556000830187610b88565b610c626020830186610b88565b610c6f6040830185610c31565b610c7c6060830184610b88565b95945050505050565b60008060408385031215610c9c57610c9b610aee565b5b6000610caa85828601610b3c565b9250506020610cbb85828601610bc9565b9150509250929050565b6000606082019050610cda6000830186610b88565b610ce76020830185610b88565b610cf46040830184610b88565b949350505050565b600080600060608486031215610d1557610d14610aee565b5b6000610d2386828701610b3c565b9350506020610d3486828701610bc9565b9250506040610d4586828701610bc9565b9150509250925092565b6000602082019050610d646000830184610c31565b92915050565b60008115159050919050565b610d7f81610d6a565b8114610d8a57600080fd5b50565b600081519050610d9c81610d76565b92915050565b600060208284031215610db857610db7610aee565b5b6000610dc684828501610d8d565b91505092915050565b6000606082019050610de46000830186610c31565b610df16020830185610c31565b610dfe6040830184610b88565b949350505050565b6000604082019050610e1b6000830185610c31565b610e286020830184610b88565b939250505056fea2646970667358221220f236754d769f0f023fc6cfd39f3db7496da5328fd315126b983c1eef0117f03664736f6c63430008090033";

type ThanksPayDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThanksPayDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ThanksPayData__factory extends ContractFactory {
  constructor(...args: ThanksPayDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    securityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ThanksPayData> {
    return super.deploy(
      securityAddress,
      overrides || {}
    ) as Promise<ThanksPayData>;
  }
  override getDeployTransaction(
    securityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(securityAddress, overrides || {});
  }
  override attach(address: string): ThanksPayData {
    return super.attach(address) as ThanksPayData;
  }
  override connect(signer: Signer): ThanksPayData__factory {
    return super.connect(signer) as ThanksPayData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThanksPayDataInterface {
    return new utils.Interface(_abi) as ThanksPayDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThanksPayData {
    return new Contract(address, _abi, signerOrProvider) as ThanksPayData;
  }
}
