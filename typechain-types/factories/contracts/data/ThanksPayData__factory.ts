/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ThanksPayData,
  ThanksPayDataInterface,
} from "../../../contracts/data/ThanksPayData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "securityAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    name: "companyRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "partnerBalanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    name: "partnerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "kind",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "workerBalanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "wId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
    ],
    name: "workerRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "companies",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPartnerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "kind",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getWorkerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "partners",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
    ],
    name: "readCompany",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
    ],
    name: "readPartner",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
    ],
    name: "readWorker",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "saving",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    name: "registerPartner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
    ],
    name: "registerWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "setCompanyBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    name: "setLatestRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "setLatestWagePay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "setPartnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "kind",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "setWorkerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "types",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "company",
        type: "address",
      },
    ],
    name: "viewCompanyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "partner",
        type: "address",
      },
    ],
    name: "viewPartnerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "worker",
        type: "uint256",
      },
    ],
    name: "viewWorkerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "workers",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "saving",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002016380380620020168339818101604052810190620000379190620001e7565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000a760405180606001604052806037815260200162001fdf6037913982620000ae60201b620016ec1760201c565b5062000302565b620001508282604051602401620000c7929190620002ce565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200015460201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001af8262000182565b9050919050565b620001c181620001a2565b8114620001cd57600080fd5b50565b600081519050620001e181620001b6565b92915050565b6000602082840312156200020057620001ff6200017d565b5b60006200021084828501620001d0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200025557808201518184015260208101905062000238565b8381111562000265576000848401525b50505050565b6000601f19601f8301169050919050565b6000620002898262000219565b62000295818562000224565b9350620002a781856020860162000235565b620002b2816200026b565b840191505092915050565b620002c881620001a2565b82525050565b60006040820190508181036000830152620002ea81856200027c565b9050620002fb6020830184620002bd565b9392505050565b611ccd80620003126000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806369b43b56116100ad57806395c336521161007157806395c336521461036c578063acced2311461039d578063ba49cdb5146103b9578063cefe0f26146103ea578063eb9ddbb91461040657610121565b806369b43b56146102a4578063769cd514146102c05780637af3d487146102f05780637cc2097d146103205780638716b8181461033c57610121565b80631a078ed8116100f45780631a078ed8146101d7578063342d3ff8146101f3578063355e6ce8146102235780634048a257146102535780635b69860b1461028857610121565b8063016fa01814610126578063065611551461015657806307f6d0a41461018b57806309b9aef3146101a7575b600080fd5b610140600480360381019061013b9190611814565b610436565b60405161014d919061185a565b60405180910390f35b610170600480360381019061016b9190611814565b6104a6565b60405161018296959493929190611884565b60405180910390f35b6101a560048036038101906101a09190611911565b6105b9565b005b6101c160048036038101906101bc9190611814565b610735565b6040516101ce919061185a565b60405180910390f35b6101f160048036038101906101ec9190611951565b61074d565b005b61020d60048036038101906102089190611814565b610a05565b60405161021a919061185a565b60405180910390f35b61023d60048036038101906102389190611814565b610a51565b60405161024a919061185a565b60405180910390f35b61026d60048036038101906102689190611814565b610a6f565b60405161027f96959493929190611884565b60405180910390f35b6102a2600480360381019061029d9190611911565b610acb565b005b6102be60048036038101906102b99190611911565b610c47565b005b6102da60048036038101906102d59190611814565b610dfc565b6040516102e7919061185a565b60405180910390f35b61030a600480360381019061030591906119a4565b610e48565b604051610317919061185a565b60405180910390f35b61033a60048036038101906103359190611911565b610fed565b005b610356600480360381019061035191906119e4565b611268565b604051610363919061185a565b60405180910390f35b61038660048036038101906103819190611814565b61126f565b604051610394929190611a11565b60405180910390f35b6103b760048036038101906103b29190611911565b611293565b005b6103d360048036038101906103ce9190611814565b61140f565b6040516103e1929190611a11565b60405180910390f35b61040460048036038101906103ff9190611a3a565b611488565b005b610420600480360381019061041b9190611814565b6116a0565b60405161042d919061185a565b60405180910390f35b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090508060000151915050919050565b6000806000806000806000600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815250509050806000015181602001518260400151836060015184608001518560a001519650965096509650965096505091939550919395565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303952c6260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b815260040161064e9190611a8d565b60206040518083038186803b15801561066657600080fd5b505afa15801561067a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069e9190611ae0565b6040518263ffffffff1660e01b81526004016106ba9190611b1c565b60006040518083038186803b1580156106d257600080fd5b505afa1580156106e6573d6000803e3d6000fd5b5050505080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050565b60066020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303952c6260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016107e29190611a8d565b60206040518083038186803b1580156107fa57600080fd5b505afa15801561080e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108329190611ae0565b6040518263ffffffff1660e01b815260040161084e9190611b1c565b60006040518083038186803b15801561086657600080fd5b505afa15801561087a573d6000803e3d6000fd5b505050506040518060c001604052806000815260200160008152602001600081526020018281526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a082015181600501559050506002600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f56f761bd6e53ed4ba3090c7eae15640bd1d25ee4db8acb2b0cd835c9142ba6d08383836040516109f893929190611b37565b60405180910390a1505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b60056020528060005260406000206000915090508060000154905081565b60036020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154905086565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303952c6260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b8152600401610b609190611a8d565b60206040518083038186803b158015610b7857600080fd5b505afa158015610b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb09190611ae0565b6040518263ffffffff1660e01b8152600401610bcc9190611b1c565b60006040518083038186803b158015610be457600080fd5b505afa158015610bf8573d6000803e3d6000fd5b5050505080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303952c6260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b8152600401610cdc9190611a8d565b60206040518083038186803b158015610cf457600080fd5b505afa158015610d08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2c9190611ae0565b6040518263ffffffff1660e01b8152600401610d489190611b1c565b60006040518083038186803b158015610d6057600080fd5b505afa158015610d74573d6000803e3d6000fd5b5050505080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507f0c3bcae7e61591af02bb2812a964a3d2b74e34edae27feca4b070cd7b8959b448282604051610df0929190611b6e565b60405180910390a15050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152505090506001841415610fb957600060046000836080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905080602001518260a0015111610fab57816060015192505050610fe7565b816000015192505050610fe7565b6002841415610fcf578060200151915050610fe7565b6003841415610fe5578060400151915050610fe7565b505b92915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303952c6260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016110829190611a8d565b60206040518083038186803b15801561109a57600080fd5b505afa1580156110ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d29190611ae0565b6040518263ffffffff1660e01b81526004016110ee9190611b1c565b60006040518083038186803b15801561110657600080fd5b505afa15801561111a573d6000803e3d6000fd5b5050505060405180604001604052806000815260200182815250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505060405180602001604052806000815250600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001559050506001600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f4944f1bb890742e6929853c2e03499a2438afb211e23e1cc762a64423e60d81e828260405161125c929190611b6e565b60405180910390a15050565b6000919050565b60046020528060005260406000206000915090508060000154908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303952c6260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016113289190611a8d565b60206040518083038186803b15801561134057600080fd5b505afa158015611354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113789190611ae0565b6040518263ffffffff1660e01b81526004016113949190611b1c565b60006040518083038186803b1580156113ac57600080fd5b505afa1580156113c0573d6000803e3d6000fd5b5050505080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505050565b6000806000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050806000015181602001519250925050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303952c6260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b815260040161151d9190611a8d565b60206040518083038186803b15801561153557600080fd5b505afa158015611549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156d9190611ae0565b6040518263ffffffff1660e01b81526004016115899190611b1c565b60006040518083038186803b1580156115a157600080fd5b505afa1580156115b5573d6000803e3d6000fd5b50505050600183141561160e5780600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550611660565b600283141561165f5780600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b5b7fbc1399fa0c252f2200fe669860024bb409af86ea1b559a72199ed99cc2a323e983838360405161169393929190611b97565b60405180910390a1505050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6117848282604051602401611702929190611c67565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611788565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117e1826117b6565b9050919050565b6117f1816117d6565b81146117fc57600080fd5b50565b60008135905061180e816117e8565b92915050565b60006020828403121561182a576118296117b1565b5b6000611838848285016117ff565b91505092915050565b6000819050919050565b61185481611841565b82525050565b600060208201905061186f600083018461184b565b92915050565b61187e816117d6565b82525050565b600060c082019050611899600083018961184b565b6118a6602083018861184b565b6118b3604083018761184b565b6118c0606083018661184b565b6118cd6080830185611875565b6118da60a083018461184b565b979650505050505050565b6118ee81611841565b81146118f957600080fd5b50565b60008135905061190b816118e5565b92915050565b60008060408385031215611928576119276117b1565b5b6000611936858286016117ff565b9250506020611947858286016118fc565b9150509250929050565b60008060006060848603121561196a576119696117b1565b5b6000611978868287016117ff565b9350506020611989868287016117ff565b925050604061199a868287016118fc565b9150509250925092565b600080604083850312156119bb576119ba6117b1565b5b60006119c9858286016118fc565b92505060206119da858286016117ff565b9150509250929050565b6000602082840312156119fa576119f96117b1565b5b6000611a08848285016118fc565b91505092915050565b6000604082019050611a26600083018561184b565b611a33602083018461184b565b9392505050565b600080600060608486031215611a5357611a526117b1565b5b6000611a61868287016118fc565b9350506020611a72868287016117ff565b9250506040611a83868287016118fc565b9150509250925092565b6000602082019050611aa26000830184611875565b92915050565b60008115159050919050565b611abd81611aa8565b8114611ac857600080fd5b50565b600081519050611ada81611ab4565b92915050565b600060208284031215611af657611af56117b1565b5b6000611b0484828501611acb565b91505092915050565b611b1681611aa8565b82525050565b6000602082019050611b316000830184611b0d565b92915050565b6000606082019050611b4c6000830186611875565b611b596020830185611875565b611b66604083018461184b565b949350505050565b6000604082019050611b836000830185611875565b611b90602083018461184b565b9392505050565b6000606082019050611bac600083018661184b565b611bb96020830185611875565b611bc6604083018461184b565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c08578082015181840152602081019050611bed565b83811115611c17576000848401525b50505050565b6000601f19601f8301169050919050565b6000611c3982611bce565b611c438185611bd9565b9350611c53818560208601611bea565b611c5c81611c1d565b840191505092915050565b60006040820190508181036000830152611c818185611c2e565b9050611c906020830184611875565b939250505056fea2646970667358221220940c7dd9e83938f657d5760c2e3207e9287ada917698066131d4317cc3284aed64736f6c63430008090033696e205468616e6b735061794461746120636f6e7374727563746f722c206164647265737320666f722073656375726974792069733a20";

type ThanksPayDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThanksPayDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ThanksPayData__factory extends ContractFactory {
  constructor(...args: ThanksPayDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    securityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ThanksPayData> {
    return super.deploy(
      securityAddress,
      overrides || {}
    ) as Promise<ThanksPayData>;
  }
  override getDeployTransaction(
    securityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(securityAddress, overrides || {});
  }
  override attach(address: string): ThanksPayData {
    return super.attach(address) as ThanksPayData;
  }
  override connect(signer: Signer): ThanksPayData__factory {
    return super.connect(signer) as ThanksPayData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThanksPayDataInterface {
    return new utils.Interface(_abi) as ThanksPayDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThanksPayData {
    return new Contract(address, _abi, signerOrProvider) as ThanksPayData;
  }
}
