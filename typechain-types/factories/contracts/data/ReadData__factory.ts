/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ReadData,
  ReadDataInterface,
} from "../../../contracts/data/ReadData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dataAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPartnerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getWorkerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
    ],
    name: "readPartner",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "relativePayday",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
    ],
    name: "readWorker",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106b13803806106b1833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b61059a806101176000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063016fa0181461005157806306561155146100815780634d0de225146100b4578063ba49cdb5146100e4575b600080fd5b61006b60048036038101906100669190610362565b610116565b60405161007891906103a8565b60405180910390f35b61009b60048036038101906100969190610362565b610136565b6040516100ab94939291906103d2565b60405180910390f35b6100ce60048036038101906100c99190610362565b6101f4565b6040516100db91906103a8565b60405180910390f35b6100fe60048036038101906100f99190610362565b610243565b60405161010d93929190610417565b60405180910390f35b60008060008061012585610243565b925092509250829350505050919050565b60008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634048a257866040518263ffffffff1660e01b8152600401610195919061044e565b60806040518083038186803b1580156101ad57600080fd5b505afa1580156101c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e591906104aa565b93509350935093509193509193565b600080600080600061020586610136565b935093509350935060008061021984610243565b9250925050808310156102345784965050505050505061023e565b8596505050505050505b919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395c33652856040518263ffffffff1660e01b81526004016102a2919061044e565b60606040518083038186803b1580156102ba57600080fd5b505afa1580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610511565b9250925092509193909250565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061032f82610304565b9050919050565b61033f81610324565b811461034a57600080fd5b50565b60008135905061035c81610336565b92915050565b600060208284031215610378576103776102ff565b5b60006103868482850161034d565b91505092915050565b6000819050919050565b6103a28161038f565b82525050565b60006020820190506103bd6000830184610399565b92915050565b6103cc81610324565b82525050565b60006080820190506103e76000830187610399565b6103f46020830186610399565b61040160408301856103c3565b61040e6060830184610399565b95945050505050565b600060608201905061042c6000830186610399565b6104396020830185610399565b6104466040830184610399565b949350505050565b600060208201905061046360008301846103c3565b92915050565b6104728161038f565b811461047d57600080fd5b50565b60008151905061048f81610469565b92915050565b6000815190506104a481610336565b92915050565b600080600080608085870312156104c4576104c36102ff565b5b60006104d287828801610480565b94505060206104e387828801610480565b93505060406104f487828801610495565b925050606061050587828801610480565b91505092959194509250565b60008060006060848603121561052a576105296102ff565b5b600061053886828701610480565b935050602061054986828701610480565b925050604061055a86828701610480565b915050925092509256fea2646970667358221220403df781e926561b5dcaf5b0b58e95dbbb8982e8e4f7d13583f405b12debfc4664736f6c63430008090033";

type ReadDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReadDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReadData__factory extends ContractFactory {
  constructor(...args: ReadDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dataAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReadData> {
    return super.deploy(dataAddress, overrides || {}) as Promise<ReadData>;
  }
  override getDeployTransaction(
    dataAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(dataAddress, overrides || {});
  }
  override attach(address: string): ReadData {
    return super.attach(address) as ReadData;
  }
  override connect(signer: Signer): ReadData__factory {
    return super.connect(signer) as ReadData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReadDataInterface {
    return new utils.Interface(_abi) as ReadDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReadData {
    return new Contract(address, _abi, signerOrProvider) as ReadData;
  }
}
