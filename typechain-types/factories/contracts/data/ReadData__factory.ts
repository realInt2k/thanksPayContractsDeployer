/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ReadData,
  ReadDataInterface,
} from "../../../contracts/data/ReadData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dataAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPartnerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getWorkerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
    ],
    name: "readPartner",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wId",
        type: "address",
      },
    ],
    name: "readWorker",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610679380380610679833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610562806101176000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063016fa0181461005157806306561155146100815780634d0de225146100b4578063ba49cdb5146100e4575b600080fd5b61006b6004803603810190610066919061034b565b610115565b6040516100789190610391565b60405180910390f35b61009b6004803603810190610096919061034b565b61012d565b6040516100ab94939291906103bb565b60405180910390f35b6100ce60048036038101906100c9919061034b565b6101eb565b6040516100db9190610391565b60405180910390f35b6100fe60048036038101906100f9919061034b565b610234565b60405161010c929190610400565b60405180910390f35b60008061012183610234565b50905080915050919050565b60008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634048a257866040518263ffffffff1660e01b815260040161018c9190610429565b60806040518083038186803b1580156101a457600080fd5b505afa1580156101b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dc9190610485565b93509350935093509193509193565b60008060008060006101fc8661012d565b9350935093509350600061020f83610234565b91505080821161022657839550505050505061022f565b84955050505050505b919050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395c33652846040518263ffffffff1660e01b81526004016102909190610429565b604080518083038186803b1580156102a757600080fd5b505afa1580156102bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df91906104ec565b91509150915091565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610318826102ed565b9050919050565b6103288161030d565b811461033357600080fd5b50565b6000813590506103458161031f565b92915050565b600060208284031215610361576103606102e8565b5b600061036f84828501610336565b91505092915050565b6000819050919050565b61038b81610378565b82525050565b60006020820190506103a66000830184610382565b92915050565b6103b58161030d565b82525050565b60006080820190506103d06000830187610382565b6103dd6020830186610382565b6103ea60408301856103ac565b6103f76060830184610382565b95945050505050565b60006040820190506104156000830185610382565b6104226020830184610382565b9392505050565b600060208201905061043e60008301846103ac565b92915050565b61044d81610378565b811461045857600080fd5b50565b60008151905061046a81610444565b92915050565b60008151905061047f8161031f565b92915050565b6000806000806080858703121561049f5761049e6102e8565b5b60006104ad8782880161045b565b94505060206104be8782880161045b565b93505060406104cf87828801610470565b92505060606104e08782880161045b565b91505092959194509250565b60008060408385031215610503576105026102e8565b5b60006105118582860161045b565b92505060206105228582860161045b565b915050925092905056fea264697066735822122031f095e10eb5492ccdc393f4ca427dd4ee00eed030c5be796fed59644402ec2d64736f6c63430008090033";

type ReadDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReadDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReadData__factory extends ContractFactory {
  constructor(...args: ReadDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dataAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReadData> {
    return super.deploy(dataAddress, overrides || {}) as Promise<ReadData>;
  }
  override getDeployTransaction(
    dataAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(dataAddress, overrides || {});
  }
  override attach(address: string): ReadData {
    return super.attach(address) as ReadData;
  }
  override connect(signer: Signer): ReadData__factory {
    return super.connect(signer) as ReadData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReadDataInterface {
    return new utils.Interface(_abi) as ReadDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReadData {
    return new Contract(address, _abi, signerOrProvider) as ReadData;
  }
}
