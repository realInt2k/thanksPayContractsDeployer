/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ThanksData,
  ThanksDataInterface,
} from "../../../contracts/data/ThanksData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "securityAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    name: "companyRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "partnerBalanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    name: "partnerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "workerBalanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
    ],
    name: "workerRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
    ],
    name: "getPartner",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bonus",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "partner",
        type: "uint256",
      },
    ],
    name: "getPartnerThanksPayableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "partner",
        type: "uint256",
      },
    ],
    name: "getPartnerWithdrawableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
    ],
    name: "getWorker",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
    ],
    name: "getWorkerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "partners",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bonus",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestPay",
        type: "uint256",
      },
    ],
    name: "registerPartner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
    ],
    name: "registerWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    name: "setLatestRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "setLatestWagePay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "setPartnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bonus",
        type: "uint256",
      },
    ],
    name: "setPartnerBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "setWorkerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "types",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "workers",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRequest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620013cb380380620013cb8339818101604052810190620000379190620000eb565b8080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200011d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b38262000086565b9050919050565b620000c581620000a6565b8114620000d157600080fd5b50565b600081519050620000e581620000ba565b92915050565b60006020828403121562000104576200010362000081565b5b60006200011484828501620000d4565b91505092915050565b61129e806200012d6000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c8063a39dbdb911610097578063d59b9cde11610066578063d59b9cde146102c0578063dfd9c726146102dc578063f1a22dc2146102f8578063ff6d38371461032b576100f4565b8063a39dbdb9146101fb578063b63f98041461022e578063c3b49d041461025e578063cefbfa3614610290576100f4565b80636b835f0e116100d35780636b835f0e1461014d5780637a91e8311461017d5780637fc96619146101995780638fe9e3d4146101cb576100f4565b8062581cb3146100f9578063571f2f6d1461011557806369821b7d14610131575b600080fd5b610113600480360381019061010e9190610f16565b610347565b005b61012f600480360381019061012a9190610f16565b610492565b005b61014b60048036038101906101469190610f16565b6105dd565b005b61016760048036038101906101629190610f56565b6106ef565b6040516101749190610f92565b60405180910390f35b61019760048036038101906101929190610fad565b61070f565b005b6101b360048036038101906101ae9190610f56565b6108bc565b6040516101c293929190611000565b60405180910390f35b6101e560048036038101906101e09190610f56565b61091d565b6040516101f29190610f92565b60405180910390f35b61021560048036038101906102109190610f56565b6109d9565b6040516102259493929190611037565b60405180910390f35b61024860048036038101906102439190610f56565b610a4d565b6040516102559190610f92565b60405180910390f35b61027860048036038101906102739190610f56565b610a95565b60405161028793929190611000565b60405180910390f35b6102aa60048036038101906102a59190610f56565b610abf565b6040516102b79190610f92565b60405180910390f35b6102da60048036038101906102d59190610f16565b610ad7565b005b6102f660048036038101906102f19190610f16565b610c71565b005b610312600480360381019061030d9190610f56565b610d83565b6040516103229493929190611037565b60405180910390f35b61034560048036038101906103409190610f16565b610db3565b005b3360011515600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b81526004016103a791906110bd565b60206040518083038186803b1580156103bf57600080fd5b505afa1580156103d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f79190611110565b151514610439576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104309061119a565b60405180910390fd5b8160016000858152602001908152602001600020600001819055507ff0392502814d803ae434ee14e5c92ec8bcf3862c90c1abac55cdd382d912adf783836040516104859291906111ba565b60405180910390a1505050565b3360011515600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b81526004016104f291906110bd565b60206040518083038186803b15801561050a57600080fd5b505afa15801561051e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105429190611110565b151514610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b9061119a565b60405180910390fd5b8160026000858152602001908152602001600020600001819055507f6f8d0739b0bfc4ed36a6dbb2356548f06dfa56e5462ff4ca0bf5ba69db52119883836040516105d09291906111ba565b60405180910390a1505050565b3360011515600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b815260040161063d91906110bd565b60206040518083038186803b15801561065557600080fd5b505afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190611110565b1515146106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c69061119a565b60405180910390fd5b816001600085815260200190815260200160002060020181905550505050565b600060016000838152602001908152602001600020600001549050919050565b3360011515600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b815260040161076f91906110bd565b60206040518083038186803b15801561078757600080fd5b505afa15801561079b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bf9190611110565b151514610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f89061119a565b60405180910390fd5b60405180608001604052806000815260200183815260200184815260200160008152506002600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050600260036000868152602001908152602001600020819055507f0a602962b575a00b750b8a4a4400f35d2d138dfb2f524fc85e72f7e91643ec058484846040516108ae93929190611000565b60405180910390a150505050565b6000806000806001600086815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050806000015181602001518260400151935093509350509193909250565b60008060026000848152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905060006001600083604001518152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090508060400151826060015110156109ca578160200151925050506109d4565b8160000151925050505b919050565b600080600080600060026000878152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905080600001518160200151826040015183606001519450945094509450509193509193565b6000610a8e60016000848152602001908152602001600020600101546001600085815260200190815260200160002060000154610ec590919063ffffffff16565b9050919050565b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b60036020528060005260406000206000915090505481565b3360011515600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b8152600401610b3791906110bd565b60206040518083038186803b158015610b4f57600080fd5b505afa158015610b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b879190611110565b151514610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc09061119a565b60405180910390fd5b604051806060016040528060008152602001600081526020018381525060016000858152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600160036000858152602001908152602001600020819055507f43682a84fb08e941778401f9a9d2efc89dfdfe22c376ae1330d74869a60eaed38383604051610c649291906111ba565b60405180910390a1505050565b3360011515600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b8152600401610cd191906110bd565b60206040518083038186803b158015610ce957600080fd5b505afa158015610cfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d219190611110565b151514610d63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5a9061119a565b60405180910390fd5b816002600085815260200190815260200160002060030181905550505050565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b3360011515600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff1660e01b8152600401610e1391906110bd565b60206040518083038186803b158015610e2b57600080fd5b505afa158015610e3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e639190611110565b151514610ea5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9c9061119a565b60405180910390fd5b816001600085815260200190815260200160002060010181905550505050565b60008183610ed39190611212565b905092915050565b600080fd5b6000819050919050565b610ef381610ee0565b8114610efe57600080fd5b50565b600081359050610f1081610eea565b92915050565b60008060408385031215610f2d57610f2c610edb565b5b6000610f3b85828601610f01565b9250506020610f4c85828601610f01565b9150509250929050565b600060208284031215610f6c57610f6b610edb565b5b6000610f7a84828501610f01565b91505092915050565b610f8c81610ee0565b82525050565b6000602082019050610fa76000830184610f83565b92915050565b600080600060608486031215610fc657610fc5610edb565b5b6000610fd486828701610f01565b9350506020610fe586828701610f01565b9250506040610ff686828701610f01565b9150509250925092565b60006060820190506110156000830186610f83565b6110226020830185610f83565b61102f6040830184610f83565b949350505050565b600060808201905061104c6000830187610f83565b6110596020830186610f83565b6110666040830185610f83565b6110736060830184610f83565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110a78261107c565b9050919050565b6110b78161109c565b82525050565b60006020820190506110d260008301846110ae565b92915050565b60008115159050919050565b6110ed816110d8565b81146110f857600080fd5b50565b60008151905061110a816110e4565b92915050565b60006020828403121561112657611125610edb565b5b6000611134848285016110fb565b91505092915050565b600082825260208201905092915050565b7f4655434b00000000000000000000000000000000000000000000000000000000600082015250565b600061118460048361113d565b915061118f8261114e565b602082019050919050565b600060208201905081810360008301526111b381611177565b9050919050565b60006040820190506111cf6000830185610f83565b6111dc6020830184610f83565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061121d82610ee0565b915061122883610ee0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561125d5761125c6111e3565b5b82820190509291505056fea26469706673582212203d5ef9d41f05d6929b721f1661dbe37158d7d3eaaf9e07e6b23bdf2bad9a797664736f6c63430008090033";

type ThanksDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThanksDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ThanksData__factory extends ContractFactory {
  constructor(...args: ThanksDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    securityAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ThanksData> {
    return super.deploy(securityAddr, overrides || {}) as Promise<ThanksData>;
  }
  override getDeployTransaction(
    securityAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(securityAddr, overrides || {});
  }
  override attach(address: string): ThanksData {
    return super.attach(address) as ThanksData;
  }
  override connect(signer: Signer): ThanksData__factory {
    return super.connect(signer) as ThanksData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThanksDataInterface {
    return new utils.Interface(_abi) as ThanksDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThanksData {
    return new Contract(address, _abi, signerOrProvider) as ThanksData;
  }
}
